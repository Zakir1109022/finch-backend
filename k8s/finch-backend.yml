apiVersion: v1
kind: Namespace
metadata:
  name: django-app

---

apiVersion: v1
kind: Secret
metadata:
  name: django-env-secret
  namespace: django-app
type: Opaque
stringData:
  POSTGRES_DB: fleetdb
  POSTGRES_USER: roy77
  POSTGRES_PASSWORD: asdf1234@77
  PYTHONUNBUFFERED: "1"
  POSTGRES_HOST: postgres
  POSTGRES_PORT: "5432"
  STRIPE_SECRET_KEY: "sk_test_..."
  STRIPE_PUBLIC_KEY: "pk_test_..."
  STRIPE_WEBHOOK_SECRET: "whsec_..."
  SITE_URL: "http://93.127.195.189:5000"
  FRONTEND_SITE_URL: "https://finch-development.vercel.app"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: django-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: django-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: django-env-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: django-env-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: django-env-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: django-env-secret
                  key: POSTGRES_PORT
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "roy77","-d","fleetdb"]
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: django-app
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - port: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  namespace: django-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
        - name: django
          image: zakir22/finch-backend:latest
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: django-env-secret
          readinessProbe:
            httpGet:
              path: /login
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /login
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 20

---

apiVersion: v1
kind: Service
metadata:
  name: django
  namespace: django-app
spec:
  selector:
    app: django
  ports:
    - port: 8000
      targetPort: 8000
